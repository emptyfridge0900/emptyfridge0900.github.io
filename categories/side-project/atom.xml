<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
    <title> - Side Project</title>
    <link rel="self" type="application/atom+xml" href="https://emptyfridge.dev/categories/side-project/atom.xml"/>
    <link rel="alternate" type="text/html" href="https://emptyfridge.dev/"/>
    <generator uri="https://www.getzola.org/">Zola</generator>
    <updated>2024-06-08T00:00:00+00:00</updated>
    <id>https://emptyfridge.dev/categories/side-project/atom.xml</id>
    <entry xml:lang="en">
        <title>Game of life</title>
        <published>2024-06-08T00:00:00+00:00</published>
        <updated>2024-06-08T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://emptyfridge.dev/projects/game-of-life/"/>
        <id>https://emptyfridge.dev/projects/game-of-life/</id>
        
        <content type="html" xml:base="https://emptyfridge.dev/projects/game-of-life/">&lt;p&gt;I worked on an interpreter project about 3 months ago. I wanted to turn my project into a web service, so I googled it. All I have to do is compile the rust project as a wasm file and publish it. So I started the game-of-life project to practice converting rust code to wasm file.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;rustwasm.github.io&#x2F;docs&#x2F;book&quot;&gt;https:&#x2F;&#x2F;rustwasm.github.io&#x2F;docs&#x2F;book&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;This project of mine follows the tutorial above. Except for the project settings and webpack settings, all other codes were used exactly as they were in the tutorial.&lt;&#x2F;p&gt;
&lt;p&gt;In the tutuorial, author use wasm-pack-template to start the project but both game-of-life booka and wasm-pack-template are outdated, I couldn&#x27;t learn much about setup and running the project.
I depend a lot &lt;a href=&quot;https:&#x2F;&#x2F;rustwasm.github.io&#x2F;docs&#x2F;wasm-pack&#x2F;&quot;&gt;wasm-pack doc&lt;&#x2F;a&gt; while doing this project.&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emptyfridge0900&#x2F;game-of-life&quot;&gt;ðŸ‘‰Github Repository&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;emptyfridge.dev&#x2F;game-of-life&quot;&gt;ðŸ‘‰ Try game of life here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;references-how-to-publish-results-on-a-github-page&quot;&gt;References how to publish results on a GitHub page&lt;&#x2F;h3&gt;
&lt;h4 id=&quot;github-action&quot;&gt;Github Action&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.daleseo.com&#x2F;?tag=GitHubActions&quot;&gt;https:&#x2F;&#x2F;www.daleseo.com&#x2F;?tag=GitHubActions&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h4 id=&quot;github-action-workflow&quot;&gt;Github Action Workflow&lt;&#x2F;h4&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;TX-2&#x2F;TX-2-simulator&#x2F;blob&#x2F;main&#x2F;.github&#x2F;workflows&#x2F;deploy-wasm.yml&quot;&gt;https:&#x2F;&#x2F;github.com&#x2F;TX-2&#x2F;TX-2-simulator&#x2F;blob&#x2F;main&#x2F;.github&#x2F;workflows&#x2F;deploy-wasm.yml&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Interpreter</title>
        <published>2024-03-18T00:00:00+00:00</published>
        <updated>2024-03-18T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://emptyfridge.dev/projects/interpreter/"/>
        <id>https://emptyfridge.dev/projects/interpreter/</id>
        
        <content type="html" xml:base="https://emptyfridge.dev/projects/interpreter/">&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emptyfridge0900&#x2F;interpreter&quot;&gt;Monkey programming lanuage&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;p&gt;About a month ago watched this &lt;a href=&quot;https:&#x2F;&#x2F;youtu.be&#x2F;yeatOU5vVsA?t=631&quot;&gt;video&lt;&#x2F;a&gt;, and I wanted to learn about interpreter.&lt;&#x2F;p&gt;
&lt;p&gt;While implementing a chess game a few months ago, I realized that the level of game programming was too high for me to challenge myself, so I decided to start with building an interpreter that I could follow by reading a &lt;a href=&quot;https:&#x2F;&#x2F;interpreterbook.com&#x2F;&quot;&gt;book&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;p&gt;I&#x27;ll probably spend my whole after work hours work on this project until April.&lt;&#x2F;p&gt;
&lt;p&gt;++ update 2025-01-09 ++&lt;&#x2F;p&gt;
&lt;p&gt;Project was super fun and interpreter was an interesting topic! &lt;br &#x2F;&gt;
I will use this project as a stepping stone to challenge myself with compilers next time.&lt;&#x2F;p&gt;
&lt;p&gt;When making it into a web service, I tried to use wasm_bindgen like I did in the &lt;a href=&quot;https:&#x2F;&#x2F;emptyfridge.dev&#x2F;projects&#x2F;game-of-life&quot;&gt;game of life project&lt;&#x2F;a&gt;, but I created a web service using a great framework called &lt;a href=&quot;https:&#x2F;&#x2F;dioxuslabs.com&quot;&gt;Dioxus&lt;&#x2F;a&gt;.
The biggest lesson I learn from this is the lifetime of a Trait object is inferred as &#x27;static when the lifetime is not there. I didn&#x27;t know this and struggled with Rust&#x27;s compiler for hours.&lt;&#x2F;p&gt;
&lt;p&gt;And here is my interpreter web service &lt;a href=&quot;https:&#x2F;&#x2F;emptyfridge.dev&#x2F;interpreter&quot;&gt;ðŸ‘‰Try it out&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Chess</title>
        <published>2024-03-04T00:00:00+00:00</published>
        <updated>2024-03-04T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://emptyfridge.dev/projects/chess/"/>
        <id>https://emptyfridge.dev/projects/chess/</id>
        
        <content type="html" xml:base="https://emptyfridge.dev/projects/chess/">&lt;h1 id=&quot;github-repository&quot;&gt;Github Repository&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emptyfridge0900&#x2F;chess&quot;&gt;Click here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h3 id=&quot;objective&quot;&gt;Objective&lt;&#x2F;h3&gt;
&lt;p&gt;To check how much I understand rust by doing a side project using what I learned in &lt;a href=&quot;https:&#x2F;&#x2F;doc.rust-lang.org&#x2F;book&#x2F;&quot;&gt;the book&lt;&#x2F;a&gt;.&lt;&#x2F;p&gt;
&lt;h3 id=&quot;review&quot;&gt;Review&lt;&#x2F;h3&gt;
&lt;p&gt;This is my very first rust project. Implementing chess program was harder than what I initially thought, especially implementing special rules like En passant, Castling, and Promotion gave me headaches.&lt;&#x2F;p&gt;
&lt;p&gt;On the other hand, through this project I solidify my understanding of ownership of rust. For me, who has a C# background only, ownership was an issue that I seemed to understood but did not fully understood.&lt;&#x2F;p&gt;
&lt;p&gt;This was a time to become more familiar with smart pointer while using Refcell and Box. But I think I still need to study smart pointer more. And the concept I still don&#x27;t understand is lifetime and concurrency. I hope I can address this in my next Rust project.&lt;&#x2F;p&gt;
&lt;p&gt;Overall it was a fun project. Yet, at first, having to learn the rules of chess was annoying and time consumming. This is the same no matter what project we are working on. If you jump into a project without understanding the business logic, large-scale modifications will be required along the way.&lt;&#x2F;p&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Pizza Shop</title>
        <published>2020-12-05T00:00:00+00:00</published>
        <updated>2020-12-05T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://emptyfridge.dev/projects/pizza/"/>
        <id>https://emptyfridge.dev/projects/pizza/</id>
        
        <content type="html" xml:base="https://emptyfridge.dev/projects/pizza/">&lt;h1 id=&quot;github-repository&quot;&gt;Github Repository&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;emptyfridge0900&#x2F;pizza&quot;&gt;Click here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;project&quot;&gt;Project&lt;&#x2F;h1&gt;
&lt;p&gt;Ordering pizza and side dishes at a fake pizza shop. These days, Oauth2 is used a lot here and there, so I tried using IdentityServer4 for the project. Of course, you won&#x27;t have to log in to buy pizza.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;motivation&quot;&gt;Motivation&lt;&#x2F;h1&gt;
&lt;p&gt;I have studied backend, frontend, and sql so far, but I have not had any experience in releasing a product by integrating these. Through this project, although incomplete, I wanted to gain experience in making products.&lt;br &#x2F;&gt;
And for this project, I used techs I haven&#x27;t used before. I learned a lot about Docker, Blazor,Bootstrap, and Postgresql from this project.&lt;&#x2F;p&gt;
&lt;h1 id=&quot;gif&quot;&gt;GIF&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;login.gif&quot; alt=&quot;&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;images&#x2F;history.gif&quot; alt=&quot;&quot; &#x2F;&gt;
&lt;img src=&quot;&#x2F;images&#x2F;add.gif&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;tech-framework-used&quot;&gt;Tech&#x2F;framework used&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;aspnet&#x2F;core&#x2F;web-api&#x2F;?view=aspnetcore-5.0&quot;&gt;ASP .NET Core 5.0 Api&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;aspnet&#x2F;core&#x2F;blazor&#x2F;?view=aspnetcore-5.0&quot;&gt;ASP .NET Core 5.0 Blazor(server)&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;identityserver4.readthedocs.io&#x2F;en&#x2F;latest&#x2F;&quot;&gt;Identity Server 4&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.microsoft.com&#x2F;en-us&#x2F;ef&#x2F;core&#x2F;&quot;&gt;Entity Framework Core&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.postgresql.org&#x2F;docs&#x2F;12&#x2F;index.html&quot;&gt;Postgres 12.5&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;getbootstrap.com&#x2F;&quot;&gt;Bootstrap 4&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;docs.docker.com&#x2F;get-started&#x2F;overview&#x2F;&quot;&gt;Docker&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;hosting-service&quot;&gt;Hosting service&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.heroku.com&#x2F;&quot;&gt;Heroku&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;features&quot;&gt;Features&lt;&#x2F;h1&gt;
&lt;p&gt;API&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Retrive Pizza list&lt;&#x2F;li&gt;
&lt;li&gt;Retrive Side dishes list&lt;&#x2F;li&gt;
&lt;li&gt;Create order&lt;&#x2F;li&gt;
&lt;li&gt;Look up order history&lt;&#x2F;li&gt;
&lt;li&gt;Track order&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;p&gt;CLIENT&lt;&#x2F;p&gt;
&lt;ul&gt;
&lt;li&gt;Display Pizza info&lt;&#x2F;li&gt;
&lt;li&gt;Display Side dish info&lt;&#x2F;li&gt;
&lt;li&gt;Add items to cart&lt;&#x2F;li&gt;
&lt;li&gt;Calculate tax and amount paid&lt;&#x2F;li&gt;
&lt;li&gt;Checkout&lt;&#x2F;li&gt;
&lt;li&gt;Login&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;api-reference&quot;&gt;Api Reference&lt;&#x2F;h1&gt;
&lt;h2 id=&quot;get-methods&quot;&gt;Get methods&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;api-pizza-type&quot;&gt;&lt;strong&gt;api&#x2F;pizza&#x2F;type&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;get pizza type&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;api-pizza-size&quot;&gt;&lt;strong&gt;api&#x2F;pizza&#x2F;size&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;get pizza size&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;api-pizaz-topping&quot;&gt;&lt;strong&gt;api&#x2F;pizaz&#x2F;topping&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;get pizza toppings&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;api-pizza-sides&quot;&gt;&lt;strong&gt;api&#x2F;pizza&#x2F;sides&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;get side dishes&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;api-pizza-customers-id-orders&quot;&gt;&lt;strong&gt;api&#x2F;Pizza&#x2F;Customers&#x2F;{id}&#x2F;Orders&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;get order history by customer id&lt;br &#x2F;&gt;
&lt;code&gt;parameter: Guid&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;api-pizza-orders-orderid&quot;&gt;&lt;strong&gt;api&#x2F;Pizza&#x2F;Orders&#x2F;{orderId}&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;get order detail by orderId&lt;br &#x2F;&gt;
&lt;code&gt;parameter: Guid&lt;&#x2F;code&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h2 id=&quot;post-method&quot;&gt;Post method&lt;&#x2F;h2&gt;
&lt;h3 id=&quot;api-pizza&quot;&gt;&lt;strong&gt;api&#x2F;Pizza&lt;&#x2F;strong&gt;&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;create an order&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;blockquote&gt;
&lt;p&gt;body&lt;&#x2F;p&gt;
&lt;&#x2F;blockquote&gt;
&lt;pre style=&quot;background-color:#383838;color:#e6e1dc;&quot;&gt;&lt;code&gt;&lt;span&gt;{
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;Customer&amp;quot;:{
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;CustomerId&amp;quot;:&amp;quot;7d9ecead-eca1-48b2-8366-784fb1c17c16&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;FirstName&amp;quot;:&amp;quot;Bob&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;LastName&amp;quot;:&amp;quot;Smith&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;Email&amp;quot;:&amp;quot;BobSmith@email.com&amp;quot;,
&lt;&#x2F;span&gt;&lt;span&gt;        &amp;quot;PhoneNumber&amp;quot;:&amp;quot;519-666-7777&amp;quot;
&lt;&#x2F;span&gt;&lt;span&gt;    },
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;Pizzas&amp;quot;:[
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;Qty&amp;quot;:2,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;TypeId&amp;quot;:1,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;SizeId&amp;quot;:1,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;Toppings&amp;quot;:[1,2,3]
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    ],
&lt;&#x2F;span&gt;&lt;span&gt;    &amp;quot;Sides&amp;quot;:[
&lt;&#x2F;span&gt;&lt;span&gt;        {
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;Qty&amp;quot;:2,
&lt;&#x2F;span&gt;&lt;span&gt;            &amp;quot;SideId&amp;quot;:1
&lt;&#x2F;span&gt;&lt;span&gt;
&lt;&#x2F;span&gt;&lt;span&gt;        }
&lt;&#x2F;span&gt;&lt;span&gt;    ]
&lt;&#x2F;span&gt;&lt;span&gt;}
&lt;&#x2F;span&gt;&lt;&#x2F;code&gt;&lt;&#x2F;pre&gt;
</content>
        
    </entry>
    <entry xml:lang="en">
        <title>Movie Nomination</title>
        <published>2020-10-14T00:00:00+00:00</published>
        <updated>2020-10-14T00:00:00+00:00</updated>
        
        <author>
          <name>
            
              Unknown
            
          </name>
        </author>
        
        <link rel="alternate" type="text/html" href="https://emptyfridge.dev/projects/movie/"/>
        <id>https://emptyfridge.dev/projects/movie/</id>
        
        <content type="html" xml:base="https://emptyfridge.dev/projects/movie/">&lt;h1 id=&quot;github-repository&quot;&gt;Github Repository&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;github.com&#x2F;bds0900&#x2F;shoppie-front&quot;&gt;Click here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;test-application&quot;&gt;Test Application&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;a href=&quot;https:&#x2F;&#x2F;bds0900.github.io&#x2F;shoppie-front&#x2F;&quot;&gt;Click here&lt;&#x2F;a&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;project&quot;&gt;Project&lt;&#x2F;h1&gt;
&lt;p&gt;Shopify Web Developer Intern Challenge&lt;&#x2F;p&gt;
&lt;h1 id=&quot;gif&quot;&gt;GIF&lt;&#x2F;h1&gt;
&lt;p&gt;&lt;img src=&quot;&#x2F;images&#x2F;reactapp.gif&quot; alt=&quot;&quot; &#x2F;&gt;&lt;&#x2F;p&gt;
&lt;h1 id=&quot;tech-framework-used&quot;&gt;Tech.framework used&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;reactjs.org&#x2F;&quot;&gt;React&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;www.typescriptlang.org&#x2F;&quot;&gt;Typescript&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h3 id=&quot;hosting-service&quot;&gt;Hosting service&lt;&#x2F;h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https:&#x2F;&#x2F;pages.github.com&#x2F;&quot;&gt;Github Page&lt;&#x2F;a&gt;&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
&lt;h1 id=&quot;features&quot;&gt;Features&lt;&#x2F;h1&gt;
&lt;ul&gt;
&lt;li&gt;Search OMDB and display the results (movies only)&lt;&#x2F;li&gt;
&lt;li&gt;Add a movie from the search results to our nomination list&lt;&#x2F;li&gt;
&lt;li&gt;View the list of films already nominated&lt;&#x2F;li&gt;
&lt;li&gt;Remove a nominee from the nomination list&lt;&#x2F;li&gt;
&lt;li&gt;Save nomination lists if the user leaves the page&lt;&#x2F;li&gt;
&lt;li&gt;Create shareable links&lt;&#x2F;li&gt;
&lt;&#x2F;ul&gt;
</content>
        
    </entry>
</feed>
